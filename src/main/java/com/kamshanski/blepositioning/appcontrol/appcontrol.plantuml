@startuml

title __APPCONTROL's Class Diagram__\n

  namespace com.kamshanski.blepositioning {
    namespace appcontrol {
      class com.kamshanski.blepositioning.appcontrol.PlotPack {
          ~ max : int
          ~ pack : HashMap<String, double[]>
          + PlotPack()
          + add()
          + getMax()
          + getPack()
      }
    }
  }
  

  namespace com.kamshanski.blepositioning {
    namespace appcontrol {
      abstract class com.kamshanski.blepositioning.appcontrol.PlotViewModelAbstract {
          + plotUpdateNotifier : Notifier
          # graph : XYChart
          # model : LiveData<Model>
          + PlotViewModelAbstract()
          + getGraph()
          + getStyler()
          + notifyPlotPanel()
      }
    }
  }
  

  namespace com.kamshanski.blepositioning {
    namespace appcontrol {
      class com.kamshanski.blepositioning.appcontrol.PositionAreaPlotViewModel {
          {static} + TARGET_RADIUS : int
          ~ ys : HashMap<String, Pair<double[], double[]>>
          + PositionAreaPlotViewModel()
          + getStyler()
          + setNewPosition()
      }
    }
  }
  

  namespace com.kamshanski.blepositioning {
    namespace appcontrol {
      class com.kamshanski.blepositioning.appcontrol.PositionTrendPlotViewModel {
          + N : int
          {static} + TARGET_RADIUS : int
          + positionLogMessage : DataPropagator<String>
          + slaveSourcesCount : int
          ~ xs : HashMap<String, SlidingWindowDoubleArray>
          ~ ys : HashMap<String, SlidingWindowDoubleArray>
          + PositionTrendPlotViewModel()
          + setNewPosition()
      }
    }
  }
  

  namespace com.kamshanski.blepositioning {
    namespace appcontrol {
      class com.kamshanski.blepositioning.appcontrol.RssiPlotViewModel {
          ~ LOWER_LIMIT_SERIES_NAME : String
          ~ N : int
          ~ UPPER_LIMIT_SERIES_NAME : String
          ~ delimiters : ArrayList<Integer>
          ~ x : double[]
          ~ ys : HashMap<String, double[]>
          + RssiPlotViewModel()
          + plotRssiPacks()
          + putNewData()
      }
    }
  }
  

  namespace com.kamshanski.blepositioning {
    namespace appcontrol {
      class com.kamshanski.blepositioning.appcontrol.ViewModel {
          + comPortNum : LiveData<String>
          + expName : LiveData<String>
          + experimentInOn : LiveData<Boolean>
          + experimentResultsMessage : DataPropagator<String>
          + isConnected : LiveData<Boolean>
          + printMessage : DataPropagator<String>
          + programLogMessage : DataPropagator<String>
          + slaveCount : LiveData<Integer>
          + targetCount : LiveData<Integer>
          + targetsListString : LiveData<String>
          - model : LiveData<Model>
          + ViewModel()
          + displayExperimentsResults()
          + openConnection()
          + record()
          + remove()
          - printException()
          - printNewPosition()
          - printToExperimentsResultsLabel()
          - printToProgramLog()
          - println()
      }
    }
  }
  

  com.kamshanski.blepositioning.appcontrol.PositionAreaPlotViewModel -up-|> com.kamshanski.blepositioning.appcontrol.PlotViewModelAbstract
  com.kamshanski.blepositioning.appcontrol.PositionAreaPlotViewModel o-- com.kamshanski.blepositioning.utils.SquareDimension : fieldConstraints
  com.kamshanski.blepositioning.appcontrol.PositionAreaPlotViewModel o-- com.kamshanski.blepositioning.utils.SquareDimension : plotConstraints
  com.kamshanski.blepositioning.appcontrol.PositionTrendPlotViewModel -up-|> com.kamshanski.blepositioning.appcontrol.PlotViewModelAbstract
  com.kamshanski.blepositioning.appcontrol.RssiPlotViewModel -up-|> com.kamshanski.blepositioning.appcontrol.PlotViewModelAbstract
  com.kamshanski.blepositioning.appcontrol.ViewModel o-- com.kamshanski.blepositioning.comport.ComReader : comReader


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
