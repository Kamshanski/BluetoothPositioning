package com.kamshanski.blepositioning.model.methods.solvers.classificators;

public class SvrRaw extends Classificator {
    @Override
    double computeX(double[] input) {
        return (((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((-1.2996354647271708) + ((Math.exp((-0.1) * ((((Math.pow((0.4471022345555556) - (input[0]), 2.0)) + (Math.pow((0.7165854624444444) - (input[1]), 2.0))) + (Math.pow((0.830380254) - (input[2]), 2.0))) + (Math.pow((0.7816190593333333) - (input[3]), 2.0))))) * (66.09422448396091))) + ((Math.exp((-0.1) * ((((Math.pow((0.4658517193333333) - (input[0]), 2.0)) + (Math.pow((0.7868234584444445) - (input[1]), 2.0))) + (Math.pow((0.7641401091111111) - (input[2]), 2.0))) + (Math.pow((0.7745509893333333) - (input[3]), 2.0))))) * (-100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.5938435588888888) - (input[0]), 2.0)) + (Math.pow((0.769212295888889) - (input[1]), 2.0))) + (Math.pow((0.8138888888888889) - (input[2]), 2.0))) + (Math.pow((0.7479337514444444) - (input[3]), 2.0))))) * (-100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.7341970946666666) - (input[0]), 2.0)) + (Math.pow((0.7917762661111111) - (input[1]), 2.0))) + (Math.pow((0.8375533427777777) - (input[2]), 2.0))) + (Math.pow((0.6843941932222222) - (input[3]), 2.0))))) * (-100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.682775032) - (input[0]), 2.0)) + (Math.pow((0.7298452298888888) - (input[1]), 2.0))) + (Math.pow((0.7471087842222223) - (input[2]), 2.0))) + (Math.pow((0.7291096712222223) - (input[3]), 2.0))))) * (-100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.7026596675555555) - (input[0]), 2.0)) + (Math.pow((0.7668452005555556) - (input[1]), 2.0))) + (Math.pow((0.727254509) - (input[2]), 2.0))) + (Math.pow((0.7032485408888889) - (input[3]), 2.0))))) * (-100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.8146716542222222) - (input[0]), 2.0)) + (Math.pow((0.6027083858888889) - (input[1]), 2.0))) + (Math.pow((0.801873492888889) - (input[2]), 2.0))) + (Math.pow((0.6945704108888889) - (input[3]), 2.0))))) * (-100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.7867969664444445) - (input[0]), 2.0)) + (Math.pow((0.6517033753333333) - (input[1]), 2.0))) + (Math.pow((0.7484796667777778) - (input[2]), 2.0))) + (Math.pow((0.7079243181111111) - (input[3]), 2.0))))) * (-100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.623522554) - (input[0]), 2.0)) + (Math.pow((0.7445671307777778) - (input[1]), 2.0))) + (Math.pow((0.7628382408888889) - (input[2]), 2.0))) + (Math.pow((0.7688899087777779) - (input[3]), 2.0))))) * (-100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.6255934343333334) - (input[0]), 2.0)) + (Math.pow((0.7339404978888889) - (input[1]), 2.0))) + (Math.pow((0.7366576818888889) - (input[2]), 2.0))) + (Math.pow((0.7797516714444445) - (input[3]), 2.0))))) * (-100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.7741705875555556) - (input[0]), 2.0)) + (Math.pow((0.670596206) - (input[1]), 2.0))) + (Math.pow((0.7315491232222222) - (input[2]), 2.0))) + (Math.pow((0.8061180338888889) - (input[3]), 2.0))))) * (-100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.6099195709999999) - (input[0]), 2.0)) + (Math.pow((0.8151111111111111) - (input[1]), 2.0))) + (Math.pow((0.7884486553333333) - (input[2]), 2.0))) + (Math.pow((0.690831965) - (input[3]), 2.0))))) * (-100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.7377358491111111) - (input[0]), 2.0)) + (Math.pow((0.7138478746666667) - (input[1]), 2.0))) + (Math.pow((0.7861997635555555) - (input[2]), 2.0))) + (Math.pow((0.6812137438888889) - (input[3]), 2.0))))) * (-100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.7023334542222222) - (input[0]), 2.0)) + (Math.pow((0.7012110726666667) - (input[1]), 2.0))) + (Math.pow((0.7696095644444444) - (input[2]), 2.0))) + (Math.pow((0.6829464562222222) - (input[3]), 2.0))))) * (-100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.7729159255555555) - (input[0]), 2.0)) + (Math.pow((0.5926882525555556) - (input[1]), 2.0))) + (Math.pow((0.7638442102222223) - (input[2]), 2.0))) + (Math.pow((0.6735492577777779) - (input[3]), 2.0))))) * (-100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.7968235596666667) - (input[0]), 2.0)) + (Math.pow((0.6252818035555555) - (input[1]), 2.0))) + (Math.pow((0.6860437256666666) - (input[2]), 2.0))) + (Math.pow((0.6709415487777778) - (input[3]), 2.0))))) * (-100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.7876190476666666) - (input[0]), 2.0)) + (Math.pow((0.465793394) - (input[1]), 2.0))) + (Math.pow((0.788023649888889) - (input[2]), 2.0))) + (Math.pow((0.7433599584444445) - (input[3]), 2.0))))) * (100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.5032289747777777) - (input[0]), 2.0)) + (Math.pow((0.7407920262222223) - (input[1]), 2.0))) + (Math.pow((0.8488673138888889) - (input[2]), 2.0))) + (Math.pow((0.7858467333333334) - (input[3]), 2.0))))) * (100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.5056035776666666) - (input[0]), 2.0)) + (Math.pow((0.6914935943333334) - (input[1]), 2.0))) + (Math.pow((0.7327605445555556) - (input[2]), 2.0))) + (Math.pow((0.6865075780000001) - (input[3]), 2.0))))) * (-100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.5651454138888888) - (input[0]), 2.0)) + (Math.pow((0.711624111) - (input[1]), 2.0))) + (Math.pow((0.7249971333333333) - (input[2]), 2.0))) + (Math.pow((0.7191015477777777) - (input[3]), 2.0))))) * (-100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.5717266562222222) - (input[0]), 2.0)) + (Math.pow((0.7200497268888889) - (input[1]), 2.0))) + (Math.pow((0.682693273111111) - (input[2]), 2.0))) + (Math.pow((0.7116947933333334) - (input[3]), 2.0))))) * (-100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.5538304940000001) - (input[0]), 2.0)) + (Math.pow((0.7499672045555557) - (input[1]), 2.0))) + (Math.pow((0.7065064335555555) - (input[2]), 2.0))) + (Math.pow((0.6820540463333333) - (input[3]), 2.0))))) * (-100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.5544453773333333) - (input[0]), 2.0)) + (Math.pow((0.686712521) - (input[1]), 2.0))) + (Math.pow((0.7576009831111111) - (input[2]), 2.0))) + (Math.pow((0.8235202673333333) - (input[3]), 2.0))))) * (100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.695351566) - (input[0]), 2.0)) + (Math.pow((0.6662099926666667) - (input[1]), 2.0))) + (Math.pow((0.7483579154444445) - (input[2]), 2.0))) + (Math.pow((0.8212417146666666) - (input[3]), 2.0))))) * (100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.5935560468888889) - (input[0]), 2.0)) + (Math.pow((0.726951952) - (input[1]), 2.0))) + (Math.pow((0.7484692531111111) - (input[2]), 2.0))) + (Math.pow((0.7667394346666667) - (input[3]), 2.0))))) * (100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.5835545146666666) - (input[0]), 2.0)) + (Math.pow((0.736646725) - (input[1]), 2.0))) + (Math.pow((0.8163204747777778) - (input[2]), 2.0))) + (Math.pow((0.7168502010000001) - (input[3]), 2.0))))) * (100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.6098800282222222) - (input[0]), 2.0)) + (Math.pow((0.7010234662222222) - (input[1]), 2.0))) + (Math.pow((0.7203539823333333) - (input[2]), 2.0))) + (Math.pow((0.6003467370000001) - (input[3]), 2.0))))) * (-100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.701233244) - (input[0]), 2.0)) + (Math.pow((0.699734684) - (input[1]), 2.0))) + (Math.pow((0.730530138) - (input[2]), 2.0))) + (Math.pow((0.6280873494444444) - (input[3]), 2.0))))) * (-76.29195842210892))) + ((Math.exp((-0.1) * ((((Math.pow((0.6794105173333334) - (input[0]), 2.0)) + (Math.pow((0.678617284) - (input[1]), 2.0))) + (Math.pow((0.637825822) - (input[2]), 2.0))) + (Math.pow((0.7027097057777778) - (input[3]), 2.0))))) * (-100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.7009503843333333) - (input[0]), 2.0)) + (Math.pow((0.7486756915555556) - (input[1]), 2.0))) + (Math.pow((0.62318116) - (input[2]), 2.0))) + (Math.pow((0.7262837506666667) - (input[3]), 2.0))))) * (-100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.6290060643333334) - (input[0]), 2.0)) + (Math.pow((0.6524522158888889) - (input[1]), 2.0))) + (Math.pow((0.7501355013333334) - (input[2]), 2.0))) + (Math.pow((0.6595875384444444) - (input[3]), 2.0))))) * (100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.6955327196666666) - (input[0]), 2.0)) + (Math.pow((0.7335914973333333) - (input[1]), 2.0))) + (Math.pow((0.8113210232222221) - (input[2]), 2.0))) + (Math.pow((0.6262765098888888) - (input[3]), 2.0))))) * (100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.674729216) - (input[0]), 2.0)) + (Math.pow((0.7504149284444444) - (input[1]), 2.0))) + (Math.pow((0.8106357153333333) - (input[2]), 2.0))) + (Math.pow((0.6127500687777778) - (input[3]), 2.0))))) * (100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.6222795627777777) - (input[0]), 2.0)) + (Math.pow((0.6686178425555556) - (input[1]), 2.0))) + (Math.pow((0.7050592008888888) - (input[2]), 2.0))) + (Math.pow((0.667649553) - (input[3]), 2.0))))) * (0.7974722572073794))) + ((Math.exp((-0.1) * ((((Math.pow((0.6867873126666667) - (input[0]), 2.0)) + (Math.pow((0.7195426418888888) - (input[1]), 2.0))) + (Math.pow((0.6273134651111111) - (input[2]), 2.0))) + (Math.pow((0.671274598888889) - (input[3]), 2.0))))) * (-100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.6847592333333333) - (input[0]), 2.0)) + (Math.pow((0.7749752145555555) - (input[1]), 2.0))) + (Math.pow((0.6502020448888889) - (input[2]), 2.0))) + (Math.pow((0.6864620508888889) - (input[3]), 2.0))))) * (-73.82455463223086))) + ((Math.exp((-0.1) * ((((Math.pow((0.7301711458888889) - (input[0]), 2.0)) + (Math.pow((0.780155934) - (input[1]), 2.0))) + (Math.pow((0.7302480983333333) - (input[2]), 2.0))) + (Math.pow((0.6317318086666667) - (input[3]), 2.0))))) * (100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.6616495928888889) - (input[0]), 2.0)) + (Math.pow((0.6869715762222223) - (input[1]), 2.0))) + (Math.pow((0.6910008368888889) - (input[2]), 2.0))) + (Math.pow((0.7236054318888888) - (input[3]), 2.0))))) * (100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.6687846204444444) - (input[0]), 2.0)) + (Math.pow((0.7146410426666667) - (input[1]), 2.0))) + (Math.pow((0.6771500843333333) - (input[2]), 2.0))) + (Math.pow((0.6731177383333333) - (input[3]), 2.0))))) * (100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.7158333333333333) - (input[0]), 2.0)) + (Math.pow((0.8153932121111112) - (input[1]), 2.0))) + (Math.pow((0.7659810574444444) - (input[2]), 2.0))) + (Math.pow((0.6997372144444445) - (input[3]), 2.0))))) * (100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.7017676767777778) - (input[0]), 2.0)) + (Math.pow((0.7574888618888889) - (input[1]), 2.0))) + (Math.pow((0.6524904214444445) - (input[2]), 2.0))) + (Math.pow((0.7220188478888889) - (input[3]), 2.0))))) * (100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.701792365) - (input[0]), 2.0)) + (Math.pow((0.7226431216666667) - (input[1]), 2.0))) + (Math.pow((0.5491581728888889) - (input[2]), 2.0))) + (Math.pow((0.6840815963333333) - (input[3]), 2.0))))) * (-100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.7036120926666667) - (input[0]), 2.0)) + (Math.pow((0.7203773883333333) - (input[1]), 2.0))) + (Math.pow((0.6574886837777778) - (input[2]), 2.0))) + (Math.pow((0.7462712281111111) - (input[3]), 2.0))))) * (100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.8181643555555556) - (input[0]), 2.0)) + (Math.pow((0.7074497144444445) - (input[1]), 2.0))) + (Math.pow((0.6654288837777778) - (input[2]), 2.0))) + (Math.pow((0.6357296104444445) - (input[3]), 2.0))))) * (100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.6789466272222222) - (input[0]), 2.0)) + (Math.pow((0.7195424432222222) - (input[1]), 2.0))) + (Math.pow((0.674516369) - (input[2]), 2.0))) + (Math.pow((0.5850215563333333) - (input[3]), 2.0))))) * (100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.6794165231111111) - (input[0]), 2.0)) + (Math.pow((0.693094093) - (input[1]), 2.0))) + (Math.pow((0.639327742) - (input[2]), 2.0))) + (Math.pow((0.6521953754444445) - (input[3]), 2.0))))) * (100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.6938673286666667) - (input[0]), 2.0)) + (Math.pow((0.7056221241111111) - (input[1]), 2.0))) + (Math.pow((0.600387553111111) - (input[2]), 2.0))) + (Math.pow((0.7635266753333334) - (input[3]), 2.0))))) * (100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.7061205731111111) - (input[0]), 2.0)) + (Math.pow((0.7521888984444445) - (input[1]), 2.0))) + (Math.pow((0.6246578701111111) - (input[2]), 2.0))) + (Math.pow((0.7529332574444445) - (input[3]), 2.0))))) * (100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.6990244136666667) - (input[0]), 2.0)) + (Math.pow((0.717529895) - (input[1]), 2.0))) + (Math.pow((0.5499590984444445) - (input[2]), 2.0))) + (Math.pow((0.8005445929999999) - (input[3]), 2.0))))) * (100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.7030279702222222) - (input[0]), 2.0)) + (Math.pow((0.7168032299999999) - (input[1]), 2.0))) + (Math.pow((0.6754775963333333) - (input[2]), 2.0))) + (Math.pow((0.3849292337777778) - (input[3]), 2.0))))) * (-100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.7153007726666666) - (input[0]), 2.0)) + (Math.pow((0.7225987975555556) - (input[1]), 2.0))) + (Math.pow((0.7133101852222222) - (input[2]), 2.0))) + (Math.pow((0.4876133035555556) - (input[3]), 2.0))))) * (100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.7171669048888889) - (input[0]), 2.0)) + (Math.pow((0.7355710109999999) - (input[1]), 2.0))) + (Math.pow((0.5994736842222222) - (input[2]), 2.0))) + (Math.pow((0.6483811851111111) - (input[3]), 2.0))))) * (100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.8080542552222222) - (input[0]), 2.0)) + (Math.pow((0.7335817997777778) - (input[1]), 2.0))) + (Math.pow((0.43360786199999996) - (input[2]), 2.0))) + (Math.pow((0.6608564554444444) - (input[3]), 2.0))))) * (-100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.7152263374444445) - (input[0]), 2.0)) + (Math.pow((0.7418289944444445) - (input[1]), 2.0))) + (Math.pow((0.6760171447777777) - (input[2]), 2.0))) + (Math.pow((0.5847415024444444) - (input[3]), 2.0))))) * (100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.7260893792222223) - (input[0]), 2.0)) + (Math.pow((0.7136880584444444) - (input[1]), 2.0))) + (Math.pow((0.6468424908888889) - (input[2]), 2.0))) + (Math.pow((0.6572547867777778) - (input[3]), 2.0))))) * (100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.6799478855555556) - (input[0]), 2.0)) + (Math.pow((0.7166245374444445) - (input[1]), 2.0))) + (Math.pow((0.6208925082222223) - (input[2]), 2.0))) + (Math.pow((0.630746799) - (input[3]), 2.0))))) * (100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.6750527335555555) - (input[0]), 2.0)) + (Math.pow((0.735645209) - (input[1]), 2.0))) + (Math.pow((0.6168767136666666) - (input[2]), 2.0))) + (Math.pow((0.6138395865555556) - (input[3]), 2.0))))) * (100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.7474234626666667) - (input[0]), 2.0)) + (Math.pow((0.7387462967777777) - (input[1]), 2.0))) + (Math.pow((0.5370134154444445) - (input[2]), 2.0))) + (Math.pow((0.6744002236666666) - (input[3]), 2.0))))) * (100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.7659838304444444) - (input[0]), 2.0)) + (Math.pow((0.7197843184444446) - (input[1]), 2.0))) + (Math.pow((0.347460382) - (input[2]), 2.0))) + (Math.pow((0.6913594802222223) - (input[3]), 2.0))))) * (-100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.758685669) - (input[0]), 2.0)) + (Math.pow((0.3811093893333333) - (input[1]), 2.0))) + (Math.pow((0.6529522574444445) - (input[2]), 2.0))) + (Math.pow((0.7314290348888889) - (input[3]), 2.0))))) * (-20.820132884447773))) + ((Math.exp((-0.1) * ((((Math.pow((0.6887920141111111) - (input[0]), 2.0)) + (Math.pow((0.826756571888889) - (input[1]), 2.0))) + (Math.pow((0.8338228095555554) - (input[2]), 2.0))) + (Math.pow((0.40316527244444444) - (input[3]), 2.0))))) * (4.044949197619322));
    }

    @Override
    double computeY(double[] input) {
        return (((((((((((((((((((((((((((((((((((((((((((((((((((((((0.054410706022887945) + ((Math.exp((-0.1) * ((((Math.pow((0.7026596675555555) - (input[0]), 2.0)) + (Math.pow((0.7668452005555556) - (input[1]), 2.0))) + (Math.pow((0.727254509) - (input[2]), 2.0))) + (Math.pow((0.7032485408888889) - (input[3]), 2.0))))) * (100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.7867969664444445) - (input[0]), 2.0)) + (Math.pow((0.6517033753333333) - (input[1]), 2.0))) + (Math.pow((0.7484796667777778) - (input[2]), 2.0))) + (Math.pow((0.7079243181111111) - (input[3]), 2.0))))) * (100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.623522554) - (input[0]), 2.0)) + (Math.pow((0.7445671307777778) - (input[1]), 2.0))) + (Math.pow((0.7628382408888889) - (input[2]), 2.0))) + (Math.pow((0.7688899087777779) - (input[3]), 2.0))))) * (-100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.6255934343333334) - (input[0]), 2.0)) + (Math.pow((0.7339404978888889) - (input[1]), 2.0))) + (Math.pow((0.7366576818888889) - (input[2]), 2.0))) + (Math.pow((0.7797516714444445) - (input[3]), 2.0))))) * (-100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.7741705875555556) - (input[0]), 2.0)) + (Math.pow((0.670596206) - (input[1]), 2.0))) + (Math.pow((0.7315491232222222) - (input[2]), 2.0))) + (Math.pow((0.8061180338888889) - (input[3]), 2.0))))) * (-100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.6099195709999999) - (input[0]), 2.0)) + (Math.pow((0.8151111111111111) - (input[1]), 2.0))) + (Math.pow((0.7884486553333333) - (input[2]), 2.0))) + (Math.pow((0.690831965) - (input[3]), 2.0))))) * (7.158117692553394))) + ((Math.exp((-0.1) * ((((Math.pow((0.672624367) - (input[0]), 2.0)) + (Math.pow((0.6260756868888889) - (input[1]), 2.0))) + (Math.pow((0.7970822446666668) - (input[2]), 2.0))) + (Math.pow((0.6913947164444444) - (input[3]), 2.0))))) * (100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.5651454138888888) - (input[0]), 2.0)) + (Math.pow((0.711624111) - (input[1]), 2.0))) + (Math.pow((0.7249971333333333) - (input[2]), 2.0))) + (Math.pow((0.7191015477777777) - (input[3]), 2.0))))) * (-100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.7553188341111111) - (input[0]), 2.0)) + (Math.pow((0.5642868181111111) - (input[1]), 2.0))) + (Math.pow((0.7845416286666667) - (input[2]), 2.0))) + (Math.pow((0.6793188245555555) - (input[3]), 2.0))))) * (100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.7387939845555554) - (input[0]), 2.0)) + (Math.pow((0.5309121752222222) - (input[1]), 2.0))) + (Math.pow((0.7324238666666667) - (input[2]), 2.0))) + (Math.pow((0.6733676295555556) - (input[3]), 2.0))))) * (100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.5717266562222222) - (input[0]), 2.0)) + (Math.pow((0.7200497268888889) - (input[1]), 2.0))) + (Math.pow((0.682693273111111) - (input[2]), 2.0))) + (Math.pow((0.7116947933333334) - (input[3]), 2.0))))) * (-100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.5538304940000001) - (input[0]), 2.0)) + (Math.pow((0.7499672045555557) - (input[1]), 2.0))) + (Math.pow((0.7065064335555555) - (input[2]), 2.0))) + (Math.pow((0.6820540463333333) - (input[3]), 2.0))))) * (-23.150988752346684))) + ((Math.exp((-0.1) * ((((Math.pow((0.5544453773333333) - (input[0]), 2.0)) + (Math.pow((0.686712521) - (input[1]), 2.0))) + (Math.pow((0.7576009831111111) - (input[2]), 2.0))) + (Math.pow((0.8235202673333333) - (input[3]), 2.0))))) * (-100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.695351566) - (input[0]), 2.0)) + (Math.pow((0.6662099926666667) - (input[1]), 2.0))) + (Math.pow((0.7483579154444445) - (input[2]), 2.0))) + (Math.pow((0.8212417146666666) - (input[3]), 2.0))))) * (-100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.7943980426666667) - (input[0]), 2.0)) + (Math.pow((0.6569284152222222) - (input[1]), 2.0))) + (Math.pow((0.7764143163333332) - (input[2]), 2.0))) + (Math.pow((0.7314800447777778) - (input[3]), 2.0))))) * (100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.735398675888889) - (input[0]), 2.0)) + (Math.pow((0.5960748792222222) - (input[1]), 2.0))) + (Math.pow((0.7527330173333333) - (input[2]), 2.0))) + (Math.pow((0.6958320437777777) - (input[3]), 2.0))))) * (100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.701372549) - (input[0]), 2.0)) + (Math.pow((0.6172769756666667) - (input[1]), 2.0))) + (Math.pow((0.7458835084444445) - (input[2]), 2.0))) + (Math.pow((0.7336109128888888) - (input[3]), 2.0))))) * (100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.5935560468888889) - (input[0]), 2.0)) + (Math.pow((0.726951952) - (input[1]), 2.0))) + (Math.pow((0.7484692531111111) - (input[2]), 2.0))) + (Math.pow((0.7667394346666667) - (input[3]), 2.0))))) * (-100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.7105025357777778) - (input[0]), 2.0)) + (Math.pow((0.7316114616666667) - (input[1]), 2.0))) + (Math.pow((0.7230041672222222) - (input[2]), 2.0))) + (Math.pow((0.6934292633333333) - (input[3]), 2.0))))) * (100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.7009503843333333) - (input[0]), 2.0)) + (Math.pow((0.7486756915555556) - (input[1]), 2.0))) + (Math.pow((0.62318116) - (input[2]), 2.0))) + (Math.pow((0.7262837506666667) - (input[3]), 2.0))))) * (100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.6290060643333334) - (input[0]), 2.0)) + (Math.pow((0.6524522158888889) - (input[1]), 2.0))) + (Math.pow((0.7501355013333334) - (input[2]), 2.0))) + (Math.pow((0.6595875384444444) - (input[3]), 2.0))))) * (100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.6955327196666666) - (input[0]), 2.0)) + (Math.pow((0.7335914973333333) - (input[1]), 2.0))) + (Math.pow((0.8113210232222221) - (input[2]), 2.0))) + (Math.pow((0.6262765098888888) - (input[3]), 2.0))))) * (-100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.674729216) - (input[0]), 2.0)) + (Math.pow((0.7504149284444444) - (input[1]), 2.0))) + (Math.pow((0.8106357153333333) - (input[2]), 2.0))) + (Math.pow((0.6127500687777778) - (input[3]), 2.0))))) * (-46.315672349401794))) + ((Math.exp((-0.1) * ((((Math.pow((0.6789135493333334) - (input[0]), 2.0)) + (Math.pow((0.696383308111111) - (input[1]), 2.0))) + (Math.pow((0.7112815026666667) - (input[2]), 2.0))) + (Math.pow((0.6372004285555556) - (input[3]), 2.0))))) * (-100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.6867873126666667) - (input[0]), 2.0)) + (Math.pow((0.7195426418888888) - (input[1]), 2.0))) + (Math.pow((0.6273134651111111) - (input[2]), 2.0))) + (Math.pow((0.671274598888889) - (input[3]), 2.0))))) * (100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.6847592333333333) - (input[0]), 2.0)) + (Math.pow((0.7749752145555555) - (input[1]), 2.0))) + (Math.pow((0.6502020448888889) - (input[2]), 2.0))) + (Math.pow((0.6864620508888889) - (input[3]), 2.0))))) * (100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.7059320308888889) - (input[0]), 2.0)) + (Math.pow((0.7246922821111111) - (input[1]), 2.0))) + (Math.pow((0.6184888625555556) - (input[2]), 2.0))) + (Math.pow((0.727902052888889) - (input[3]), 2.0))))) * (100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.7301711458888889) - (input[0]), 2.0)) + (Math.pow((0.780155934) - (input[1]), 2.0))) + (Math.pow((0.7302480983333333) - (input[2]), 2.0))) + (Math.pow((0.6317318086666667) - (input[3]), 2.0))))) * (-100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.7372834373333333) - (input[0]), 2.0)) + (Math.pow((0.7919088318888888) - (input[1]), 2.0))) + (Math.pow((0.7203570795555556) - (input[2]), 2.0))) + (Math.pow((0.5890761022222223) - (input[3]), 2.0))))) * (-100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.6616495928888889) - (input[0]), 2.0)) + (Math.pow((0.6869715762222223) - (input[1]), 2.0))) + (Math.pow((0.6910008368888889) - (input[2]), 2.0))) + (Math.pow((0.7236054318888888) - (input[3]), 2.0))))) * (-100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.690284143) - (input[0]), 2.0)) + (Math.pow((0.749577012111111) - (input[1]), 2.0))) + (Math.pow((0.6737903945555556) - (input[2]), 2.0))) + (Math.pow((0.6673586695555556) - (input[3]), 2.0))))) * (100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.7158333333333333) - (input[0]), 2.0)) + (Math.pow((0.8153932121111112) - (input[1]), 2.0))) + (Math.pow((0.7659810574444444) - (input[2]), 2.0))) + (Math.pow((0.6997372144444445) - (input[3]), 2.0))))) * (100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.7017676767777778) - (input[0]), 2.0)) + (Math.pow((0.7574888618888889) - (input[1]), 2.0))) + (Math.pow((0.6524904214444445) - (input[2]), 2.0))) + (Math.pow((0.7220188478888889) - (input[3]), 2.0))))) * (100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.701792365) - (input[0]), 2.0)) + (Math.pow((0.7226431216666667) - (input[1]), 2.0))) + (Math.pow((0.5491581728888889) - (input[2]), 2.0))) + (Math.pow((0.6840815963333333) - (input[3]), 2.0))))) * (100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.7213059557777778) - (input[0]), 2.0)) + (Math.pow((0.7368973315555555) - (input[1]), 2.0))) + (Math.pow((0.6809191223333334) - (input[2]), 2.0))) + (Math.pow((0.6047196368888889) - (input[3]), 2.0))))) * (-100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.760210558888889) - (input[0]), 2.0)) + (Math.pow((0.7259232046666666) - (input[1]), 2.0))) + (Math.pow((0.6837620957777778) - (input[2]), 2.0))) + (Math.pow((0.5419795683333334) - (input[3]), 2.0))))) * (-100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.7321922544444445) - (input[0]), 2.0)) + (Math.pow((0.7133945742222222) - (input[1]), 2.0))) + (Math.pow((0.6679858215555556) - (input[2]), 2.0))) + (Math.pow((0.571747022) - (input[3]), 2.0))))) * (-100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.7109687339999999) - (input[0]), 2.0)) + (Math.pow((0.7237285574444444) - (input[1]), 2.0))) + (Math.pow((0.6442589006666667) - (input[2]), 2.0))) + (Math.pow((0.6421626302222222) - (input[3]), 2.0))))) * (100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.6922656516666666) - (input[0]), 2.0)) + (Math.pow((0.7242809512222221) - (input[1]), 2.0))) + (Math.pow((0.5973092446666667) - (input[2]), 2.0))) + (Math.pow((0.6004805844444445) - (input[3]), 2.0))))) * (100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.6988034187777779) - (input[0]), 2.0)) + (Math.pow((0.6921748971111111) - (input[1]), 2.0))) + (Math.pow((0.5106978291111111) - (input[2]), 2.0))) + (Math.pow((0.7076966186666667) - (input[3]), 2.0))))) * (9.527640361469139))) + ((Math.exp((-0.1) * ((((Math.pow((0.6538955184444445) - (input[0]), 2.0)) + (Math.pow((0.7480188522222223) - (input[1]), 2.0))) + (Math.pow((0.6708322231111111) - (input[2]), 2.0))) + (Math.pow((0.47129959355555556) - (input[3]), 2.0))))) * (-100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.6646282213333333) - (input[0]), 2.0)) + (Math.pow((0.7253521746666667) - (input[1]), 2.0))) + (Math.pow((0.6916692174444444) - (input[2]), 2.0))) + (Math.pow((0.5055035997777778) - (input[3]), 2.0))))) * (-100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.7036120926666667) - (input[0]), 2.0)) + (Math.pow((0.7203773883333333) - (input[1]), 2.0))) + (Math.pow((0.6574886837777778) - (input[2]), 2.0))) + (Math.pow((0.7462712281111111) - (input[3]), 2.0))))) * (-100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.8181643555555556) - (input[0]), 2.0)) + (Math.pow((0.7074497144444445) - (input[1]), 2.0))) + (Math.pow((0.6654288837777778) - (input[2]), 2.0))) + (Math.pow((0.6357296104444445) - (input[3]), 2.0))))) * (-100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.705993564) - (input[0]), 2.0)) + (Math.pow((0.7246710261111111) - (input[1]), 2.0))) + (Math.pow((0.48881038055555553) - (input[2]), 2.0))) + (Math.pow((0.6684731502222222) - (input[3]), 2.0))))) * (100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.7565601876666667) - (input[0]), 2.0)) + (Math.pow((0.711896176111111) - (input[1]), 2.0))) + (Math.pow((0.661399449) - (input[2]), 2.0))) + (Math.pow((0.526147925) - (input[3]), 2.0))))) * (-100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.6926644581111111) - (input[0]), 2.0)) + (Math.pow((0.7332787064444445) - (input[1]), 2.0))) + (Math.pow((0.5577051026666667) - (input[2]), 2.0))) + (Math.pow((0.6275992696666667) - (input[3]), 2.0))))) * (100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.6859677637777778) - (input[0]), 2.0)) + (Math.pow((0.8149391953333334) - (input[1]), 2.0))) + (Math.pow((0.7212390087777777) - (input[2]), 2.0))) + (Math.pow((0.4232428386666667) - (input[3]), 2.0))))) * (52.78090304772591))) + ((Math.exp((-0.1) * ((((Math.pow((0.7152263374444445) - (input[0]), 2.0)) + (Math.pow((0.7418289944444445) - (input[1]), 2.0))) + (Math.pow((0.6760171447777777) - (input[2]), 2.0))) + (Math.pow((0.5847415024444444) - (input[3]), 2.0))))) * (-100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.7260893792222223) - (input[0]), 2.0)) + (Math.pow((0.7136880584444444) - (input[1]), 2.0))) + (Math.pow((0.6468424908888889) - (input[2]), 2.0))) + (Math.pow((0.6572547867777778) - (input[3]), 2.0))))) * (-100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.6750527335555555) - (input[0]), 2.0)) + (Math.pow((0.735645209) - (input[1]), 2.0))) + (Math.pow((0.6168767136666666) - (input[2]), 2.0))) + (Math.pow((0.6138395865555556) - (input[3]), 2.0))))) * (100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.7659838304444444) - (input[0]), 2.0)) + (Math.pow((0.7197843184444446) - (input[1]), 2.0))) + (Math.pow((0.347460382) - (input[2]), 2.0))) + (Math.pow((0.6913594802222223) - (input[3]), 2.0))))) * (-100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.758685669) - (input[0]), 2.0)) + (Math.pow((0.3811093893333333) - (input[1]), 2.0))) + (Math.pow((0.6529522574444445) - (input[2]), 2.0))) + (Math.pow((0.7314290348888889) - (input[3]), 2.0))))) * (-100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.6887920141111111) - (input[0]), 2.0)) + (Math.pow((0.826756571888889) - (input[1]), 2.0))) + (Math.pow((0.8338228095555554) - (input[2]), 2.0))) + (Math.pow((0.40316527244444444) - (input[3]), 2.0))))) * (100.0))) + ((Math.exp((-0.1) * ((((Math.pow((0.3560559591111111) - (input[0]), 2.0)) + (Math.pow((0.7386182336666667) - (input[1]), 2.0))) + (Math.pow((0.8226528854444445) - (input[2]), 2.0))) + (Math.pow((0.7262178434444444) - (input[3]), 2.0))))) * (100.0));
    }
}
